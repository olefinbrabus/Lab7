// <auto-generated />
using System;
using Lab7_1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab7_1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240322092109_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("AnimalEat", b =>
                {
                    b.Property<int>("AnimalEatsEatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalsAnimalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimalEatsEatId", "AnimalsAnimalId");

                    b.HasIndex("AnimalsAnimalId");

                    b.ToTable("AnimalEat");
                });

            modelBuilder.Entity("Lab7_1.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalBiomesBiomesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalClassClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LimbCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AnimalId");

                    b.HasIndex("AnimalBiomesBiomesId");

                    b.HasIndex("AnimalClassClassId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Lab7_1.AnimalClass", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BiomesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClassId");

                    b.HasIndex("BiomesId");

                    b.ToTable("AnimalClass");
                });

            modelBuilder.Entity("Lab7_1.Biomes", b =>
                {
                    b.Property<int>("BiomesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimalBiomes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BiomesId");

                    b.ToTable("Biomes");
                });

            modelBuilder.Entity("Lab7_1.Eat", b =>
                {
                    b.Property<int>("EatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Calories")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EatName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EatId");

                    b.ToTable("Eat");
                });

            modelBuilder.Entity("AnimalEat", b =>
                {
                    b.HasOne("Lab7_1.Eat", null)
                        .WithMany()
                        .HasForeignKey("AnimalEatsEatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab7_1.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalsAnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab7_1.Animal", b =>
                {
                    b.HasOne("Lab7_1.Biomes", "AnimalBiomes")
                        .WithMany()
                        .HasForeignKey("AnimalBiomesBiomesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab7_1.AnimalClass", "AnimalClass")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalClassClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalBiomes");

                    b.Navigation("AnimalClass");
                });

            modelBuilder.Entity("Lab7_1.AnimalClass", b =>
                {
                    b.HasOne("Lab7_1.Biomes", null)
                        .WithMany("Animals")
                        .HasForeignKey("BiomesId");
                });

            modelBuilder.Entity("Lab7_1.AnimalClass", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Lab7_1.Biomes", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
